services:
  postgres:
    image: postgres:latest
    container_name: postgres_container
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jvict -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: jvict
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_pass
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./api/sql:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    networks:
      - finance_network
    secrets:
      - postgres_pass
    restart: unless-stopped

  finance-api:
    build:
      context: ./
      dockerfile: ./docker/FinanceAPI.Dockerfile
    image: finance-api:v0.0.5b
    container_name: finance_api_container
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE: postgres
      DATABASE_ENDPOINT: postgres
      DATABASE_USERNAME: jvict
      DATABASE_PASSWORD: /run/secrets/postgres_pass
      DATABASE_PORT: 5432
      SECRET_KEY: /run/secrets/secret_key
      ADMIN_PASSWORD: /run/secrets/admin_password
      ADMIN_USERNAME: jvict
      ADMIN_EMAIL: admin@example.com
      ADMIN_FULL_NAME: Admin User
      REDIS_SERVER: redis://redis:6379
    ports:
      - "8000:8000"
    networks:
      - finance_network
    secrets:
      - postgres_pass
      - secret_key
      - admin_password

  celery:
    build:
      context: ./
      dockerfile: ./docker/Celery.Dockerfile
    image: celery:v0.0.1a
    container_name: celery_container
    depends_on:
      redis:
        condition: service_healthy
    environment:
      DATABASE: postgres
      DATABASE_ENDPOINT: postgres
      DATABASE_USERNAME: jvict
      DATABASE_PASSWORD: /run/secrets/postgres_pass
      DATABASE_PORT: 5432
      SECRET_KEY: /run/secrets/secret_key
      ADMIN_PASSWORD: /run/secrets/admin_password
      ADMIN_USERNAME: jvict
      ADMIN_EMAIL: admin@example.com
      ADMIN_FULL_NAME: Admin User
      REDIS_SERVER: redis://redis:6379
    networks:
      - finance_network
    secrets:
      - postgres_pass
      - secret_key
      - admin_password
  redis:
    image: redis:latest
    container_name: redis_container
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "6379:6379"
    networks:
      - finance_network

  bot:
    build:
      context: ./
      dockerfile: ./docker/Bot.Dockerfile
    image: bot:v0.0.1a
    container_name: bot_container
    environment:
      SECRETS: /run/secrets/bot_credentials
    networks:
      - finance_network
    secrets:
      - bot_credentials

volumes:
  postgres_data:

networks:
  finance_network:
    driver: bridge

secrets:
  postgres_pass:
    file: ./api/sql/secrets/user_credentials.txt
  secret_key:
    file: ./api/secrets/secret_key.txt
  admin_password:
    file: ./api/secrets/admin_password.txt
  bot_credentials:
    file: ./bot/secrets/secret.json