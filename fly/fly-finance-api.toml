app = "findash-api"
primary_region = "iad"

[build]
  dockerfile = "docker/FinanceAPI.Dockerfile"

[env]
  # App config
  APP_NAME = "Finance API"
  APP_VERSION = "1.0.0"
  DEBUG = "true"

  # Database config (use Fly Postgres managed or your own Postgres app)
  DATABASE = "postgres?sslmode=require"
  DATABASE_ENDPOINT = "db.aggrpurbcmasqsfppnyb.supabase.co"
  DATABASE_USERNAME = "postgres"
  DATABASE_PASSWORD = "/run/secrets/postgres_pass"  # path written at startup
  DATABASE_PORT = "5432"

  # Redis config (internal DNS do app redis)
  REDIS_SERVER = "redis://finance-redis.internal:6379"

  # Admin/security (paths escritos no startup)
  SECRET_KEY = "/run/secrets/secret_key"
  ADMIN_PASSWORD = "/run/secrets/admin_password"
  ADMIN_USERNAME = "jvict"
  ADMIN_EMAIL = "admin@example.com"
  ADMIN_FULL_NAME = "Admin User"

[http_service]
  internal_port = 8000
  force_https = true
  auto_start_machines = true
  auto_stop_machines = false
  min_machines_running = 1
  processes = ["app"]

  [[http_service.checks]]
    interval = "15s"
    timeout = "5s"
    grace_period = "30s"
    method = "GET"
    path = "/health/"  # ajuste se sua rota de saúde for diferente

[processes]
  # Escreve secrets em arquivos esperados pelo app e inicia o servidor
  app = '/bin/sh -lc "mkdir -p /run/secrets && printf \"%s\" \"$POSTGRES_PASSWORD_VALUE\" > /run/secrets/postgres_pass && printf \"%s\" \"$SECRET_KEY_VALUE\" > /run/secrets/secret_key && printf \"%s\" \"$ADMIN_PASSWORD_VALUE\" > /run/secrets/admin_password && uvicorn main:app --host 0.0.0.0 --port 8000 --app-dir api"'

# Observações:
# - Defina os secrets via: flyctl secrets set POSTGRES_PASSWORD_VALUE=... SECRET_KEY_VALUE=... ADMIN_PASSWORD_VALUE=...
# - Ajuste o nome dos apps (CHANGE_ME) e region conforme necessário.

